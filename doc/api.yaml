openapi: 3.0.0
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0

servers:
  - url: http://localhost:4000
paths:
  '/':
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Greeting
  '/user':
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/UserEntity'
      tags:
        - Users
    get:
      operationId: UserController_getAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/UserEntity'
      tags:
        - Users
  '/user/{id}':
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/UserEntity'
      tags:
        - Users
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/UserEntity'
      tags:
        - Users
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Users
  '/artist':
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ArtistEntity'
      tags:
        - Artists
    get:
      operationId: ArtistController_getAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/ArtistEntity'
      tags:
        - Artists
  '/artist/{id}':
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ArtistEntity'
      tags:
        - Artists
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ArtistEntity'
      tags:
        - Artists
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Artists
  '/track':
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TrackEntity'
      tags:
        - Tracks
    get:
      operationId: TrackController_getAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/TrackEntity'
      tags:
        - Tracks
  '/track/{id}':
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TrackEntity'
      tags:
        - Tracks
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TrackEntity'
      tags:
        - Tracks
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Tracks
  '/album':
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/AlbumEntity'
      tags:
        - Albums
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/AlbumEntity'
      tags:
        - Albums
  '/album/{id}':
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/AlbumEntity'
      tags:
        - Albums
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/AlbumEntity'
      tags:
        - Albums
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Albums
  '/favs/track/{id}':
    post:
      operationId: FavoritesController_createFavTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Favs
    delete:
      operationId: FavoritesController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Favs
  '/favs/album/{id}':
    post:
      operationId: FavoritesController_createFavAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Favs
    delete:
      operationId: FavoritesController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favs
  '/favs/artist/{id}':
    post:
      operationId: FavoritesController_createFavArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - Favs
    delete:
      operationId: FavoritesController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favs
  '/favs':
    get:
      operationId: FavoritesController_getAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/FavoritesResponseEntity'
      tags:
        - Favs
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          example: Mik
        password:
          type: string
          example: '12345'
      required:
        - login
        - password
    UserEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
          example: Stromae
        version:
          type: number
          example: 1
        createdAt:
          type: number
          example: 1234567
        updatedAt:
          type: number
          example: 1234567
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
          example: '12345'
        newPassword:
          type: string
          example: '678'
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          example: Stromae
        grammy:
          type: boolean
          example: false
      required:
        - name
        - grammy
    ArtistEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Stromae
        grammy:
          type: boolean
          example: false
      required:
        - id
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          example: Stromae
        grammy:
          type: boolean
          example: false
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          example: Hey Ho
        duration:
          type: number
          example: 262
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
        albumId:
          type: string
          nullable: true
          format: uuid
          example:
      required:
        - name
        - duration
        - artistId
        - albumId
    TrackEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hey Ho
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
        albumId:
          type: string
          nullable: true
          format: uuid
          example:
        duration:
          type: number
          example: 262
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          example: Hey Ho
        duration:
          type: number
          example: 262
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
        albumId:
          type: string
          nullable: true
          format: uuid
          example:
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          example: The Best
        year:
          type: number
          example: 2020
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
      required:
        - name
        - year
        - artistId
    AlbumEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: The Best
        year:
          type: number
          example: 2020
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
      required:
        - id
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          example: The Best
        year:
          type: number
          example: 2020
        artistId:
          type: string
          nullable: true
          format: uuid
          example:
    FavoritesResponseEntity:
      type: object
      properties:
        artists:
          type: array
          items:
            '$ref': '#/components/schemas/ArtistEntity'
        albums:
          type: array
          items:
            '$ref': '#/components/schemas/AlbumEntity'
        tracks:
          type: array
          items:
            '$ref': '#/components/schemas/TrackEntity'
      required:
        - artists
        - albums
        - tracks
